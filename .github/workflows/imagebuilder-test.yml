name: 一站式精简onecloud【ImageBuilder 优先构建 + 明确回退到 OpenWrt 23.05.5】

on:
  workflow_dispatch:
    inputs:
      brun_type:
        type: choice
        description: 选择内核/平台（用于替换 target/linux）
        required: true
        default: "meson6.6"
        options:
        - amlogic6.12
        - amlogic6.6
        - meson6.6
      OP_IP:
        description: '玩客云IP'
        required: true
        default: '192.168.1.110'
        type: string
      SERVER_IP:
        description: '主路由IP'
        required: true
        default: '192.168.1.1'
        type: string

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  # 你的源与脚本/文件（保持一致）
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default

  # 不同平台对应两套基础配置（按 brun_type 选择）
  CONFIG_FILE: Config/quicker.config
  CONFIG_FILE_AMLOGIC: Config/quicker-amlogic.config

  DIY_P1_SH: sh/new_immortalwrt.sh
  DIY_P2_SH: sh/lean2.sh
  DIY_P3_SH: sh/remove.sh
  DIY_P4_SH: sh/edit_files.sh
  DIY_P5_SH: sh/python3.patch.sh

  OWRT_IP: ${{ github.event.inputs.OP_IP }}
  OWRT_SERVER_IP: ${{ github.event.inputs.SERVER_IP }}
  OWRT_NAME: OneCloud
  OWRT_FILES: onecloud/files
  OWRT_brun_type: ${{ github.event.inputs.brun_type }}

  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build_imagebuilder:
    runs-on: ubuntu-latest

    steps:
    - name: 清理服务器空间
      uses: rmoyulong/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: 检出当前仓库
      uses: actions/checkout@main

    - name: 基础信息
      run: |
        echo "::group::主机信息"
        lscpu || true
        sudo lshw -short -C memory | grep GiB || true
        df -hT
        echo "::endgroup::"

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update --fix-missing
        sudo -E apt-get -qq full-upgrade
        sudo -E apt-get -qq install -y \
          build-essential ccache gawk git subversion \
          libncurses5-dev libssl-dev python3 python3-setuptools python3-pip \
          unzip zlib1g-dev wget rsync gcc g++ make gettext automake \
          libtool binutils bzip2 file g++-multilib bc \
          bison flex gperf python3-venv zstd libelf-dev u-boot-tools \
          dos2unix curl ca-certificates
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir && sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: 初始化变量
      id: initvars
      run: |
        export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
        export OWRT_SOURCE=$(echo $REPO_URL | cut -d '/' -f 5-)

        {
          echo "OWRT_URL=$REPO_URL"
          echo "OWRT_BRANCH=$REPO_BRANCH"
          echo "OWRT_DATE=$OWRT_DATE"
          echo "OWRT_SOURCE=$OWRT_SOURCE"
          echo "OWRT_NAME=$OWRT_NAME"
          echo "OWRT_IP=$OWRT_IP"
          echo "OWRT_SERVER_IP=$OWRT_SERVER_IP"
          echo "DIY_P1_SH=$DIY_P1_SH"
          echo "DIY_P2_SH=$DIY_P2_SH"
          echo "DIY_P3_SH=$DIY_P3_SH"
          echo "DIY_P4_SH=$DIY_P4_SH"
          echo "DIY_P5_SH=$DIY_P5_SH"
          echo "OWRT_brun_type=$OWRT_brun_type"
        } >> $GITHUB_ENV

        if [[ "${OWRT_brun_type}" == "meson6.6" || "${OWRT_brun_type}" == "meson6.12" ]]; then
          OWRT_CFG="${CONFIG_FILE}"
        elif [[ "${OWRT_brun_type}" == "amlogic6.6" || "${OWRT_brun_type}" == "amlogic6.12" ]]; then
          OWRT_CFG="${CONFIG_FILE_AMLOGIC}"
        else
          echo "未选择合法 brun_type"; exit 1
        fi
        echo "OWRT_CFG=$OWRT_CFG" >> $GITHUB_ENV
        echo "cfg=$OWRT_CFG" >> $GITHUB_OUTPUT

    # ====== A 通道：仍按你的 ImmortalWrt 路线准备（只用于探测是否存在 imagebuilder 目标） ======
    - name: 克隆 ImmortalWrt 源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone "$REPO_URL" -b "$REPO_BRANCH" openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 处理脚本
      run: |
        cd ./sh
        dos2unix ./*.sh || true
        chmod +x ./*.sh || true

    - name: 设置订阅源 & 替换 target/linux（仅用于探测）
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        cd openwrt
        if [[ "${OWRT_brun_type}" == "meson6.6" ]]; then
          mv $GITHUB_WORKSPACE/lede6.6/target/linux/meson target/linux
          chmod -Rf 755 target/linux/meson
          echo "use meson6.6"
        elif [[ "${OWRT_brun_type}" == "meson6.12" ]]; then
          mv $GITHUB_WORKSPACE/lede6.12/target/linux/meson target/linux
          chmod -Rf 755 target/linux/meson
          echo "use meson6.12"
        elif [[ "${OWRT_brun_type}" == "amlogic6.12" ]]; then
          mv $GITHUB_WORKSPACE/lede6.6/target/linux/amlogic target/linux
          chmod -Rf 755 target/linux/amlogic
          echo "use amlogic6.12"
        elif [[ "${OWRT_brun_type}" == "amlogic6.6" ]]; then
          mv $GITHUB_WORKSPACE/lede6.6/target/linux/amlogic target/linux
          chmod -Rf 755 target/linux/amlogic
          echo "use amlogic6.6"
        fi
        $GITHUB_WORKSPACE/$DIY_P1_SH || true

    - name: 安装 feeds（仅用于探测）
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 准备 .config 并开启 IB（仅用于探测）
      working-directory: ./openwrt
      run: |
        set -e
        rm -f .config*
        cp "$GITHUB_WORKSPACE/${OWRT_CFG}" .config
        grep -q '^CONFIG_IB=y' .config || echo 'CONFIG_IB=y' >> .config
        make defconfig
        echo "=== diffconfig (探测前) ==="
        ./scripts/diffconfig.sh || true

    - name: 探测是否有 imagebuilder 目标
      id: probe_ib
      working-directory: ./openwrt
      run: |
        echo "::group::Probe imagebuilder target on ImmortalWrt"
        if make -n imagebuilder >/dev/null 2>&1; then
          echo "has_ib=1" >> $GITHUB_OUTPUT
          echo "ImmortalWrt 分支存在 imagebuilder 目标"
        else
          echo "has_ib=0" >> $GITHUB_OUTPUT
          echo "ImmortalWrt 分支不存在 imagebuilder 目标"
        fi
        echo "::endgroup::"

    # ====== 分支 1：ImmortalWrt 就能构建 IB ======
    - name: 在 ImmortalWrt 上构建 ImageBuilder（V=s, -j1）
      if: ${{ steps.probe_ib.outputs.has_ib == '1' }}
      working-directory: ./openwrt
      env:
        MAKEFLAGS: "-j1"
      run: |
        set -e
        echo "=== ImmortalWrt -> make imagebuilder ==="
        make V=s -j1 imagebuilder 2>&1 | tee build-ib.log

    # ====== 分支 2：回退到 OpenWrt v23.05.5 构建 IB（全新目录，不动 A 路线） ======
    - name: 回退：在 OpenWrt v23.05.5 上构建 ImageBuilder（V=s, -j1）
      if: ${{ steps.probe_ib.outputs.has_ib != '1' }}
      working-directory: /workdir
      env:
        MAKEFLAGS: "-j1"
      run: |
        set -e
        echo "=== 回退：clone openwrt v23.05.5 到 openwrt_ib_23055 ==="
        rm -rf openwrt_ib_23055
        git clone https://github.com/openwrt/openwrt -b v23.05.5 openwrt_ib_23055
        cd openwrt_ib_23055
        ./scripts/feeds update -a
        ./scripts/feeds install -a

        # 最小 .config，仅开启 IB
        rm -f .config
        echo 'CONFIG_IB=y' > .config
        make defconfig
        echo "=== diffconfig (fallback) ==="
        ./scripts/diffconfig.sh || true

        echo "=== OpenWrt v23.05.5 -> make imagebuilder ==="
        make V=s -j1 imagebuilder 2>&1 | tee build-ib.log

    # ====== 汇总产物（两条路径都收） ======
    - name: 汇总 IB 产物
      run: |
        mkdir -p ib_out
        # ImmortalWrt 路径
        if [ -d openwrt/bin/targets ]; then
          find openwrt/bin/targets -type f -name 'openwrt-imagebuilder*' -exec cp -v {} ib_out/ \; || true
          [ -f openwrt/.config ] && cp -v openwrt/.config ib_out/config.immortalwrt.used.txt || true
          [ -f openwrt/build-ib.log ] && cp -v openwrt/build-ib.log ib_out/build-ib-immortalwrt.log || true
        fi
        # OpenWrt v23.05.5 路径
        if [ -d /workdir/openwrt_ib_23055/bin/targets ]; then
          find /workdir/openwrt_ib_23055/bin/targets -type f -name 'openwrt-imagebuilder*' -exec cp -v {} ib_out/ \; || true
          [ -f /workdir/openwrt_ib_23055/.config ] && cp -v /workdir/openwrt_ib_23055/.config ib_out/config.openwrt23055.used.txt || true
          [ -f /workdir/openwrt_ib_23055/build-ib.log ] && cp -v /workdir/openwrt_ib_23055/build-ib.log ib_out/build-ib-openwrt23055.log || true
        fi

        echo "== 列出收集到的 IB 包 =="
        ls -lah ib_out || true

    - name: 上传产物与日志
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: onecloud-imagebuilder-and-logs
        path: |
          ib_out/*

    - name: 发布 Release（只发 IB 包）
      if: ${{ env.UPLOAD_RELEASE == 'true' }}
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: IB_${{ env.REPO_BRANCH }}_${{ env.OWRT_brun_type }}_${{ env.OWRT_NAME }}_${{ env.OWRT_IP }}_${{ env.OWRT_SERVER_IP }}_${{ env.OWRT_DATE }}
        body: |
          玩客云 OneCloud（${{ env.OWRT_brun_type }}）ImageBuilder 打包
          - 首选源码：${{ env.REPO_URL }}（${{ env.REPO_BRANCH }}）
          - 若缺少 imagebuilder 目标：已自动回退到 OpenWrt v23.05.5 构建 IB
          - 产物仅包含 ImageBuilder 包与构建日志
        artifacts: ib_out/*
